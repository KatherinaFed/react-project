{"version":3,"sources":["components/Profile/ProfileContainer.jsx"],"names":["compose","connect","state","profile","profilePage","status","authorisedUserId","auth","userId","isAuth","getProfileThunk","getStatusThunk","updateStatusThunk","savePhotoThunk","saveProfileThunk","withAuthNavigate","props","id","useParams","useEffect","isOwner","updateStatus","savePhoto","saveProfile"],"mappings":"0MA6EeA,sBACbC,aARsB,SAACC,GAAD,MAAY,CAClCC,QAASD,EAAME,YAAYD,QAC3BE,OAAQH,EAAME,YAAYC,OAC1BC,iBAAkBJ,EAAMK,KAAKC,OAC7BC,OAAQP,EAAMK,KAAKE,UAIM,CACvBC,oBACAC,mBACAC,sBACAC,mBACAC,uBAGFC,IATaf,EA9DU,SAACgB,GACxB,IACEV,EAQEU,EARFV,iBACAI,EAOEM,EAPFN,gBACAC,EAMEK,EANFL,eACAR,EAKEa,EALFb,QACAE,EAIEW,EAJFX,OACAO,EAGEI,EAHFJ,kBACAC,EAEEG,EAFFH,eACAC,EACEE,EADFF,iBAGEG,EAAKC,cAAYD,GAarB,OAXKA,IACHA,EAAKX,GAIPa,qBAAU,WAERT,EAAgBO,GAChBN,EAAeM,KACd,CAACA,EAAIP,EAAiBC,IAGvB,8BACE,cAAC,IAAD,2BACMK,GADN,IAEEI,SAAUF,cAAYD,GACtBd,QAASA,EACTE,OAAQA,EACRgB,aAAcT,EACdU,UAAWT,EACXU,YAAaT","file":"static/js/5.97a81f75.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  getProfileThunk,\n  getStatusThunk,\n  updateStatusThunk,\n  savePhotoThunk,\n  saveProfileThunk\n} from '../../redux/profileReducer';\nimport Profile from './Profile';\nimport { withAuthNavigate } from '../../hoc/withAuthNavigate';\n\nconst ProfileContainer = (props) => {\n  const {\n    authorisedUserId,\n    getProfileThunk,\n    getStatusThunk,\n    profile,\n    status,\n    updateStatusThunk,\n    savePhotoThunk,\n    saveProfileThunk\n  } = props;\n\n  let id = useParams().id;\n\n  if (!id) {\n    id = authorisedUserId;\n  }\n\n  // Аналогично componentDidMount и componentDidUpdate:\n  useEffect(() => {\n\n    getProfileThunk(id);\n    getStatusThunk(id);\n  }, [id, getProfileThunk, getStatusThunk]);\n\n  return (\n    <div>\n      <Profile\n        {...props}\n        isOwner={!useParams().id}\n        profile={profile}\n        status={status}\n        updateStatus={updateStatusThunk}\n        savePhoto={savePhotoThunk}\n        saveProfile={saveProfileThunk}\n      />\n    </div>\n  );\n};\n\n// HOC FUNCTION\n// const AuthNavigateComponent = withAuthNavigate(ProfileContainer);\n\n// // FUNCTION\n// const withRouter = () => {\n//   // КОМПОНЕНТ для использования useMatch();\n//   // OLD VERSION: withRouter() function;\n//   const WithUrlDataContainerComponent = (props) => {\n//     const match = useMatch('/profile/:userId/');\n//     return <AuthNavigateComponent {...props} match={match} />;\n//   };\n\n//   return WithUrlDataContainerComponent;\n// };\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorisedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getProfileThunk,\n    getStatusThunk,\n    updateStatusThunk,\n    savePhotoThunk,\n    saveProfileThunk,\n  }),\n  // withRouter,\n  withAuthNavigate\n)(ProfileContainer);\n"],"sourceRoot":""}