{"version":3,"sources":["components/Login/Login.module.css","../node_modules/@mui/material/CssBaseline/CssBaseline.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","CssBaseline","inProps","props","useThemeProps","name","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","LoginForm","login","captcha","useState","checked","setChecked","logInSchema","Yup","shape","email","required","password","useFormik","initialValues","rememberMe","onSubmit","values","setSubmitting","setStatus","handleChange","handleSubmit","status","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","noValidate","p","mt","FormControl","fullWidth","size","InputLabel","htmlFor","OutlinedInput","id","type","value","onChange","label","FormGroup","FormControlLabel","control","Checkbox","e","target","src","alt","Input","placeholder","className","css","error","Button","mb","Login","isAuth","to","formWrapper","connect","state","auth"],"mappings":"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","file":"static/js/4.0ee46fa7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Login_formWrapper__1pUmm\",\"error\":\"Login_error__17Wu6\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import React, { useState } from 'react';\nimport css from './Login.module.css';\nimport { useFormik } from 'formik';\n\nimport {\n  Button,\n  Box,\n  Checkbox,\n  Container,\n  CssBaseline,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  Input,\n  OutlinedInput,\n  Typography,\n} from '@mui/material';\n\nimport * as Yup from 'yup';\n\nconst LoginForm = ({ login, captcha }) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleChecked = (e) => {\n    setChecked(e.target.checked);\n  };\n\n  const initialValues = {\n    email: '',\n    password: '',\n    rememberMe: false,\n    captcha: '',\n  };\n\n  const logInSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().required('Required'),\n    captcha: Yup.string(),\n  });\n\n  const onSubmit = (values, setSubmitting, setStatus) => {\n    login(\n      values.email,\n      values.password,\n      values.rememberMe,\n      values.captcha,\n      setStatus\n    );\n\n    setSubmitting(false);\n  };\n\n  const { handleChange, handleSubmit, values, status } = useFormik({\n    initialValues,\n    logInSchema,\n    onSubmit: (values, { setSubmitting, setStatus }) => {\n      const newValues = {\n        email: values.email,\n        password: values.password,\n        rememberMe: checked,\n        captcha: values.captcha,\n      };\n\n      onSubmit(newValues, setSubmitting, setStatus);\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <CssBaseline />\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          noValidate\n          sx={{ p: 1, mt: 1 }}\n        >\n          <FormControl margin=\"normal\" required fullWidth size=\"small\">\n            <InputLabel htmlFor=\"email\">E-mail</InputLabel>\n            <OutlinedInput\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              label=\"email\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth size=\"small\">\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <OutlinedInput\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              label=\"password\"\n            />\n          </FormControl>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  size=\"small\"\n                  checked={checked}\n                  onChange={handleChecked}\n                />\n              }\n              label=\"Remember me\"\n            />\n          </FormGroup>\n\n          <div>{captcha && <img src={captcha} alt=\"captcha\" />}</div>\n          <div>\n            {captcha && (\n              <FormControl margin=\"normal\" required fullWidth>\n                <Input\n                  id=\"captcha\"\n                  name=\"captcha\"\n                  placeholder=\"Put the symbols from image\"\n                  type=\"text\"\n                  value={values.captcha}\n                  onChange={handleChange}\n                />\n              </FormControl>\n            )}\n          </div>\n          <div className={css.error}>{status}</div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign in\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport css from './Login.module.css';\nimport { Navigate } from 'react-router-dom';\n\nimport LoginForm from './LoginForm';\n\nconst Login = ({ isAuth, login, captcha }) => {\n  if (isAuth) {\n    return <Navigate to={'/profile'} />;\n  }\n  return (\n    <div className={css.formWrapper}>\n      <LoginForm login={login} captcha={captcha} />\n    </div>\n  );\n};\n\nexport default Login;\n","import { connect } from 'react-redux';\n\nimport Login from './Login';\nimport { login } from '../../redux/authReducer';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  captcha: state.auth.captcha,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n"],"sourceRoot":""}